webpackJsonp([1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var zcom = __webpack_require__(1);
	var myDialog = __webpack_require__(2);
	var authentication = __webpack_require__(3);
	$(function() {
	    $("#fanhui").on("touchstart", function() {
	        location = "./applyInstalment.html";
	    });
	    initCreditCardEvent();
	    initCVN2Event();
	    initTimeNumEvent();
	    initYanjingIconEvent();
	    $("#submitA").on("touchstart", applyLfqOrder);
	    QueryString.Initial();
	    $("#modalButton").parent().on("touchend", function() {
	        myDialog.hideModal();
	        event.preventDefault();
	    });

	});

	function applyLfqOrder() {
	    if ($("#submitA").hasClass("btn_disabled")) {
	        return;
	    }
	    $(".modal-content").hide();
	    $(".modal-content2").show();
	    myDialog.showModals();

	    var param = getParameters(); // 参数字符形式 
	    console.log(param); //把字符串打印到控制台 调试用的  


	    
	    zcom.getAjax(LFQ_ORDER_CREATE_URL, param, retnFunc);
	    //    retnFunc({});
	}

	// 回调函数
	function retnFunc(retn) {
	    var tipmsg = "init";
	    if (retn.lft_orderinfo_response != undefined) {
	        if (retn.lft_orderinfo_response.resp_code == "0000") { //如果成功 
	            window.location.href = "qrcodePay.html?payCode=" + retn.serial_no;
	        } else {
	            tipmsg = retn.lft_orderinfo_response.resp_msg;
	        }
	    } else {
	        tipmsg = "当前服务请求出错，请重新查询";
	    }

	    if (tipmsg != "init") {
	        $("#msg_lable").text(tipmsg);
	        $("#verifyBtn").removeClass("disabled");
	        $(".modal-content").show();
	        $(".modal-content2").hide();
	        myDialog.showModals(); // 显示提示框
	    }
	}

	// 拼接请求参数
	function getParameters() {
	    var parameters = [{
	        name: "open_id",
	        value: QueryString.GetValue("open_id")
	    }, {
	        name: "hp_no",
	        value: QueryString.GetValue("hp_no")
	    }, {
	        name: "cust_name",
	        value: decodeURI(QueryString.GetValue("cust_name"))
	    }, {
	        name: "id_no",
	        value: QueryString.GetValue("id_no")
	    }, {
	        name: "lfq_cnt",
	        value: QueryString.GetValue("lfq_cnt")
	    }, {
	        name: "lfq_amt",
	        value: QueryString.GetValue("lfq_amt")
	    }, {
	        name: "creditCard",
	        value: $("#creditCard").val()
	    }, {
	        name: "cvn2Num",
	        value: $("#cvn2Num").val()
	    }, {
	        name: "timeNum",
	        value: $("#timeNum").val()
	    }, {
	        name: "servlet_type",
	        value: "create_order"
	    }]; //请求参数

	    return $.param(parameters);
	}

	// 禁用或启用按钮
	function isDisabledSubmit() {
	    var isXYKNum = authentication.isXYKNum($("#creditCard").val());
	    var isCvn2Num = $("#cvn2Num").val().length < 3 ? false : true;
	    var istimeNum = authentication.isTimeNum($("#timeNum").val());
	    if (isXYKNum && isCvn2Num && istimeNum) {
	        $("#submitA").removeClass("btn_disabled");
	        $("#submitA").addClass("btn_primary");
	    } else {
	        $("#submitA").removeClass("btn_primary");
	        $("#submitA").addClass("btn_disabled");
	    }


	}

	// 绑定CVN2输入框事件
	function initCVN2Event() {
	    $cvn2Num = $("#cvn2Num");
	    $cvn2Num.on("change", changeCvn2Num);
	    $cvn2Num.on("keyup", function() {
	        var cvn2NumVal = new String($cvn2Num.val());
	        if (cvn2NumVal.length > 3) {
	            $cvn2Num.val(cvn2NumVal.substr(0, 3));
	        }
	        isDisabledSubmit();
	    });
	}

	// 绑定时间输入框事件
	function initTimeNumEvent() {
	    $timeNum = $("#timeNum");
	    $timeNum.on("change", changeTimeNum);
	    $timeNum.on("keyup", function() {
	        var timeNumVal = new String($timeNum.val());
	        if (timeNumVal.length > 4) {
	            $timeNum.val(timeNumVal.substr(0, 4));
	        }
	        isDisabledSubmit();
	    });
	}

	// 绑定信用卡输入事件
	function initCreditCardEvent() {
	    $creditCard = $("#creditCard");
	    $creditCard.on("change", changeCreditCard);
	    $creditCard.on("keyup", function() {
	        isDisabledSubmit();
	    })
	}

	// 验证 信用卡输入
	function changeCreditCard() {
	    var XYKNum = $("#creditCard").val();
	    var $eventTargetParentNode = $("#creditCard").parent().parent();
	    var isXYKNum = authentication.isXYKNum(XYKNum);
	    authentication.addOrRemoveErro(isXYKNum, "isXYKNum-erro", "信用卡格式错误", $eventTargetParentNode);
	}

	//验证CVN2 格式
	function changeCvn2Num() {
	    var cvn2Num = $("#cvn2Num").val();
	    var isCvn2Num = cvn2Num.length < 3 ? false : true;
	    var $eventTargetParentNode = $("#cvn2Num").parent().parent();
	    authentication.addOrRemoveErro(isCvn2Num, "isCvn2Num-erro", "CVN2格式错误", $eventTargetParentNode);
	}

	// 验证有效时间
	function changeTimeNum() {
	    var timeNum = $("#timeNum").val();
	    var istimeNum = authentication.isTimeNum(timeNum);
	    var $eventTargetParentNode = $("#timeNum").parent().parent();
	    authentication.addOrRemoveErro(istimeNum, "istimeNum-erro", "有效时间格式错误", $eventTargetParentNode);
	}

	// 查看输入CVN2事件
	function initYanjingIconEvent() {
	    $(".yanjing_icon").on("touchstart", function() {
	        setBackground("yanjing2_icon.png");
	        $("#cvn2Num").attr("type", "number");
	        
	    });
	    $(".yanjing_icon").on("touchend", function() {
	        setTimeout(function() {
	            setBackground("yanjing_icon.png");
	            $("#cvn2Num").attr("type", "password");
	        },3000)

	    });

	    function setBackground(pngName) {
	        $(".yanjing_icon").css("background", 'url("../images/' + pngName + '")');
	        $(".yanjing_icon").css("background-repeat", 'no-repeat');
	        $(".yanjing_icon").css("background-position", '5px 5px');
	        $(".yanjing_icon").css("background-size", '23px 14px');
	    }
	}

/***/ },
/* 1 */,
/* 2 */
/***/ function(module, exports) {

	function hideModal() {
	    var theModal = document.getElementById("tishuModal");
	    theModal.style.display = "none";
	}

	function showModals(modalIs) {

	    var theModal = document.getElementById("tishuModal");
	    var back = document.getElementById("back");
	    var bWidth = parseInt(document.documentElement.clientWidth);
	    var bHeight = parseInt(document.documentElement.clientHeight);

	    var styleStr = "top:0px;left:0px;position:absolute;background:#666;width:" + bWidth + "px;height:" + bHeight + "px;";
	    styleStr += (false) ? "filter:alpha(opacity=40);" : "opacity:0.40;";
	    back.style.cssText = styleStr;
	    theModal.style.display = "block";

	}

	module.exports = {
	    hideModal: hideModal,
	    showModals: showModals
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	// 验证身份证格式
	function isSFZNo(card) {
	    var iscarNum = true;
	    // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X  
	    var reg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
	    if (reg.test(card) === false) { //身份证输入不合法
	        iscarNum = false;
	    }

	    return iscarNum;
	}

	// 验证信用卡格式
	function isXYKNum(sText) {
	    if (sText.length > 12 && sText.length < 17) {
	        return true;
	    } else {
	        return false;
	    }
	}

	// 验证四位时间 2016年04月 0416
	function isTimeNum(timeNum) {
	    var istNum = true;
	    if (timeNum.length < 4 || parseInt(timeNum.substr(0, 2)) > 12 || parseInt(timeNum.substr(0, 2)) < 1) {
	        istNum = false;
	    }

	    //验证是否 大于现在
	//    istNum = isNextYearMonth(timeNum.substr(0, 2),timeNum.substr(2, 2));
	    return istNum;
	}

	// 年份大于现在 参数字符串数字'16':2016 ,16:2016。年份相同也是大于
	function isNextYear(yearStr) {
	    var isNext = true;
	    var theNow = new Date();
	    yearStr = yearStr.toString();

	    if (yearStr.length == 4) {
	        if (theNow.getFullYear() > parseInt(yearStr)) {
	            isNext = false;
	        }
	    } else if (yearStr.length > 4 || yearStr.length == 0) {
	        isNext = false;
	    } else {
	        theYear2 = theNow.getFullYear().toString().substr(2, 4);
	        if (parseInt(theYear2) > parseInt(yearStr)) {
	            isNext = false;
	        }
	    }

	    return isNext;
	}

	// 月份是否大于 现在
	function isNextMonth(monthStr) {
	    var isNext = true;
	    var theNow = new Date();
	    if (theNow.getMonth() > parseInt(monthStr) - 1) {
	        isNext = false;
	    }
	}

	function isNextYearMonth(yearStr, monthStr) {
	    var isNext = false;
	    if (isNextYear(yearStr)) {
	        if (isNextMonth(monthStr)) {
	            isNext = true;
	        }
	    }

	    return isNext;
	}

	//验证手机号
	function isPhoneNumber(phoneNumber) {
	    var reVisa = /\d{11}/;
	    if (reVisa.test(phoneNumber)) {
	        return true;
	    } else {
	        return false;
	    }
	}

	// 检查中文名，不能包含非中文字符
	function isCnName(cnName) {
	    var cnNameLength = cnName.length;
	    var mathArrayLength = cnName.match(/[\u4e00-\u9fa5]/g) ? cnName.match(/[\u4e00-\u9fa5]/g).length : 0;
	    if (cnNameLength == mathArrayLength && cnNameLength < 9 && cnNameLength != 0) {
	        return true;
	    } else {
	        return false;
	    }
	}

	// 添加或移除错误提示
	function addOrRemoveErro(isErro, erroId, erroText, $eventTargetParentNode) {
	    var $erroDom = $("#" + erroId);
	    if (isErro) {
	        if ($erroDom.length > 0) {
	            $erroDom.remove();
	        }
	    } else if ($erroDom.length == 0) {
	        $eventTargetParentNode.after('<div class="input-erro" id="' + erroId + '">' + erroText + '！</div>');
	    }
	}

	module.exports = {
	    isSFZNo: isSFZNo,
	    isXYKNum: isXYKNum,
	    isTimeNum: isTimeNum,
	    isPhoneNumber: isPhoneNumber,
	    isCnName: isCnName,
	    addOrRemoveErro: addOrRemoveErro
	}

/***/ }
]);