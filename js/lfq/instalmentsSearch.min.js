webpackJsonp([2,5],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var zcom = __webpack_require__(7);
	var PayBox = __webpack_require__(8);
	var map = __webpack_require__(6);
	__webpack_require__(9);
	var cmodal = __webpack_require__(2);
	//当前动作状态(下拉:0,上拉:1,不动:2),默认为不动
	var flag = 2;
	var min_cnt = 0;
	var max_cnt = 20;
	var openid = "";
	var serial_no = '';
	var dataLength = 0;
	var latitude, longitude,xykh6;
	$(function() {
	    zcom.checkBrowser();
	    initSize();
	    QueryString.Initial();
	    openid = QueryString.GetValue("openid");
	    iscrollObj = iscrollAssist.newVerScrollForPull($("#wrapper"), pullDownAction, pullUpAction);
	    var data = refreshRecord(iscrollObj);
	    iscrollObj.refresh();
	    changePullupLabelText();
	    initOneRcordReallyClick();
	    PayBox.init("", function(PayBoxPassword) {
	        xykh6 = PayBoxPassword;
	        getConfig();
	        
	        
	    });
	    changeHistoryBack();
	});

	function initSize(argument) {
	    var wudingdanH = (window.innerHeight - 44) + 'px';
	    $("#tishiwudingdan").css("height", wudingdanH);
	}

	function refreshRecord() {
	    if (openid == '' || openid == undefined) {
	        return;
	    }
	    getData();
	}

	// 发送同步请求数据  (模拟数据) 加上now 为了页面请求不缓存
	function getData() {
	    var data = [];
	    var param = {
	        open_id: openid,
	        min_count: min_cnt,
	        max_count: max_cnt,
	        servlet_type: "query_order",
	        now: new Date().getTime()
	    };

	    var url = LFQ_ORDER_CREATE_URL;

	    zcom.getAjax(url, param, function(msg) {
	        if (msg.error_response != undefined) {
	            cmodal.showBodalBody(msg.error_response.sub_msg);
	            return;
	        }
	        if (msg.lft_orderinfo_response.resp_code != "0000") {
	            cmodal.showBodalBody(msg.bind_response.resp_msg);
	            return;
	        } else {
	            data = msg.lft_orderinfo_response.lfqorderInfo_arrays.lfqorderInfo ? msg.lft_orderinfo_response.lfqorderInfo_arrays.lfqorderInfo : [];
	            dataLength = data.length;
	            hideWuDingDang();
	            callbackFunc(data);
	        }

	    });

	    return data;
	}

	function hideWuDingDang() {
	    if (dataLength != 0) {
	        $("#tishiwudingdan").hide();
	    }
	}

	// 信用卡输入后六后回调函数
	function PayBoxCallbackFunc() {
	    //fkmdata 跳转到付款码参数
	    reCreateOrder(openid, serial_no, xykh6);
	}

	// 请求数据后回调
	function callbackFunc(data) {
	    if (data == "" || data == undefined || data.length == 0) {
	        if (min_cnt > 0) {
	            min_cnt -= 20;
	            max_cnt -= 20;
	        }
	        return;
	    }
	    var pjHtml = pinjieHtml(data);
	    if (flag != 1) { //除了上拉,其他的都先清除
	        $("#detail").html("");
	    }
	    $("#detail").append(pjHtml);
	    $("#scroller").css("height", $("#detail").height() + 102 + "px");

	}

	// 拼接HTML
	function pinjieHtml(data) {
	    var pjHtml = '';
	    for (var i = 0, l = data.length; i < l; i++) {
	        var orderState = changeOrderState(data[i].order_state);
	        if(data[i].order_state == "04" || data[i].order_state == "05"){
	            data[i].out_stage_count = "0";
	        }
	        var lastDateTime = data[i].apply_date + "" + data[i].apply_time;
	        // 如果有更新时间显示更新时间
	        if (data[i].lfq_trans_date) {
	            lastDateTime = data[i].lfq_trans_date + "" + data[i].lfq_trans_time;
	        }
	        var thetime = changeTimeFormat(lastDateTime);
	        pjHtml += '<div class="oneRcord" data-type="' + orderState.iconClass + '"serial_no="' + data[i].serial_no +
	            '"><div class="w1"><div class="type-name">' + orderState.name +
	            '</div><div class="time-small">' + thetime + '</div></div>' +
	            '<div class="w2"><div class="number-big">' + data[i].stage_amt +
	            '元</div><div class="stage-box"><span>' + data[i].out_stage_count +
	            '</span>/<span>' + data[i].total_stage_count + '</div></div>' +
	            '<div class="w3"><span class="fukuan_icon ' + orderState.iconClass + '"></span></div></div>';
	    }

	    return pjHtml;
	}

	function changeOrderState(orderState) {
	    //订单状态，01待消费,02分期待确认收货,03分期已确认收货,04已退货，99被拒绝状态
	    var stateObject = {};
	    if (orderState == "01") {
	        stateObject.iconClass = 'unpaid';
	        stateObject.name = "待消费";
	    } else if (orderState == "02" || orderState == "03") {
	        stateObject.iconClass = 'succeed';
	        stateObject.name = "分期成功";
	    } else if (orderState == '04') {
	        stateObject.iconClass = 'failed';
	        stateObject.name = "已退货";
	    } else if (orderState == '05') {
	        stateObject.iconClass = 'failed';
	        stateObject.name = "已撤销";
	    }  else if (orderState == "99") {
	        stateObject.iconClass = 'failed';
	        stateObject.name = "分期失败";
	    }

	    return stateObject;
	}


	function initOneRcordReallyClick() {
	    zcom.registerReallyClick($("#detail"));
	    $("#detail").on("reallyClick", function(e, $target) {
	        serial_no = $target.parent().parent().attr("serial_no");
	        if (!serial_no && $target.attr("serial_no")) {
	            serial_no = $target.attr("serial_no");
	        }
	        if ($target.parent().hasClass("w1") || $target.parent().hasClass("w2")) {
	            linkOrderDetails(serial_no);
	        } else if ($target.parent().hasClass("w3")) {
	            if ($target.hasClass("unpaid")) {
	                PayBox.restPwd();
	                PayBox.show();
	                
	            } else {
	                linkOrderDetails(serial_no);
	            }

	        } else if ($target.attr("serial_no")) {
	            linkOrderDetails($target.attr("serial_no"));
	        }
	    });
	}
	// 点击订单记录时跳转到订单详情  initOneRcordEvent
	function linkOrderDetails() {
	    // 拼接html应该把订单信息写在对应的 div.oneRcord data-ddKey="" 作为跳转用
	    location.href = "./orderDetails.html?open_id=" + openid + "&serial_no=" + serial_no; //把订单Id作为参数 请求订单详情用
	}


	// 配置config
	function getConfig() {
	    console.log("getLocation.....");
	    map.getConfig({
	        mapUrl: "/lfq/instalmentsSearch.html" + location.search
	    });
	    getLocation();
	}
	// 配置成功获取经纬度
	function getLocation() {
	    wx.ready(function() {
	        type: "gcj02",
	        wx.getLocation({
	            success: function(res) {

	                console.log("getLocation data");
	                console.dir(res);
	                latitude = res.latitude;
	                longitude = res.longitude;
	                PayBoxCallbackFunc();
	            },
	            fail: function(datas) {
	                location.href = "./positionPrompt.html";
	            },
	            cancel: function(res) {
	                alert('用户拒绝授权获取地理位置');
	            }
	        });
	    });
	}



	//重新生成该订单
	function reCreateOrder(openid, serial_no, card_6_th) {
	    
	    var param = {
	        open_id: openid,
	        serial_no: serial_no,
	        card_6th: card_6_th,
	        lat: latitude,
	        lng: longitude,
	        servlet_type: "recreate_order"
	    };

	    var url = LFQ_ORDER_CREATE_URL;
	    zcom.getAjax(url, param, function(msg) {
	        if (msg.error_response != undefined) {
	            if(msg.error_response.sub_code == 3015){
	                location.href = "./positionPrompt.html";
	            }
	            cmodal.showBodalBody(msg.error_response.sub_msg);
	            return;
	        }

	        if (msg.lft_orderinfo_response.resp_code != "0000") {
	            cmodal.showBodalBody(msg.lft_orderinfo_response.resp_msg);
	            return;
	        }

	        if (msg.lft_orderinfo_response.resp_code == "0000") { //如果成功 
	            reserial_no = msg.lft_orderinfo_response.serial_no;
	            window.location.href = "qrcodePay.html?payCode=" + msg.lft_orderinfo_response.serial_no + '&open_id=' + QueryString.GetValue("openid") + '&card_6th=' + card_6_th;
	        } else {
	            cmodal.showBodalBody(msg.lft_orderinfo_response.resp_msg);
	            return;
	        }
	    });

	}
	//查询单独的订单

	function doQuerySingle(openid, serial_no) {
	    var param = {
	        open_id: openid,
	        serial_no: serial_no,
	        servlet_type: "query_orderByOrderId"
	    };

	    var url = LFQ_ORDER_QUERY_URL;
	    zcom.getAjax(url, param, function(msg) {
	        if (msg.error_response != undefined) {
	            cmodal.showBodalBody(msg.error_response.sub_msg);
	            return;
	        }

	        if (msg.lft_orderinfo_response.resp_code != "0000") {
	            cmodal.showBodalBody(msg.bind_response.resp_msg);
	            return;
	        }

	        if (retn.lft_orderinfo_response.resp_code == "0000") { //如果成功 
	            reserial_no = retn.serial_no;
	        }
	    });
	}

	// 修改下拉提示
	function changePullupLabelText() {
	    if (dataLength < 19) {
	        $("#pullup-label").text("没有更多数据");
	    } else {
	        $("#pullup-label").text("上拉加载更多...");
	    }
	}


	/**
	 * 下拉刷新
	 */
	function pullDownAction() {
	    flag = 0;
	    setTimeout(function() {
	        min_cnt = 0;
	        max_cnt = 20;
	        refreshRecord();
	        this.refresh();
	        changePullupLabelText();
	    }.bind(this), 1000);
	}

	/*上拉加载更多*/
	function pullUpAction() {
	    setTimeout(function() {
	        flag = 1;
	        min_cnt += 20;
	        max_cnt += 20;
	        refreshRecord();
	        this.refresh();
	        changePullupLabelText();
	    }.bind(this), 1000);
	}

	// 转换时间格式 为2016-04-05 09:26:26
	function changeTimeFormat(cxinfo_trans_time) {
	    var trans_time = String(cxinfo_trans_time);
	    trans_time_year = trans_time.substr(0, 4),
	        trans_time_month = trans_time.substr(4, 2),
	        trans_time_date = trans_time.substr(6, 2),
	        trans_time_hour = trans_time.substr(8, 2),
	        trans_time_minutes = trans_time.substr(10, 2);
	    trans_time_seconds = trans_time.substr(12, 2);
	    var trans_time = trans_time_year + "-" + trans_time_month + "-" + trans_time_date + " " + trans_time_hour + ":" + trans_time_minutes + ":" + trans_time_seconds;
	    return trans_time;
	}

	function changeHistoryBack() {
	    historyPushState();
	    // 监听返回按钮并跳转到查询页面
	    window.addEventListener("popstate", function() {
	        wx.closeWindow();
	        //        location.href = 'instalmentsSearch.html?openid=' + QueryString.GetValue("open_id");
	    });
	}


	// 往浏览记录插入一条
	function historyPushState() {
	    history.pushState({
	            title: "小通分期查询"
	        },
	        "小通分期查询",
	        BASE_URL + "FuLiBao/lfq/instalmentsSearch.html?openid=" + QueryString.GetValue("openid"));
	}

/***/ },
/* 1 */,
/* 2 */
/***/ function(module, exports) {

	/**
	 * 提示框 用于替代myDialog.js
	 */
	function hideModal(modalId) {
	    var idName = modalId ? modalId : "tishuModal";
	    var theModal = document.getElementById(idName);
	    theModal.style.display = "none";
	}

	function showModals(modalId) {
	    var idName = modalId ? modalId : "tishuModal";
	    var theModal = document.getElementById(idName);
	    var bWidth = parseInt(document.documentElement.clientWidth);
	    var bHeight = parseInt(document.documentElement.clientHeight);

	    $(".modal>.back").css({
	        "top": "0px",
	        "left": "0px",
	        "position": "absolute",
	        "background": "#666",
	        "width": "100%",
	        "height": "100%",
	        "opacity": 0.40,
	    });

	    theModal.style.display = "block";

	}

	// 设置提示内容
	function setModalBody(modalBody,modalId) {
	    var idName = modalId ? modalId : "tishuModal";
	    $("#"+idName+" .modal-body").html(modalBody);
	}

	function showBodalBody(modalBody,modalId) {
	    var idName = modalId ? modalId : "tishuModal";
	    setModalBody(modalBody);
	    showModals(idName);
	}

	// 初始化
	(function init() {
	    $("#modalButton").parent().on("touchend", function() {
	        hideModal();
	        event.preventDefault();
	    });
	})();


	// 不打包形式  要加载requrie.js
	/*
	require.register("./cmodal.js", function(module, exports, require) {
	    module.exports = {
	        setModalBody: setModalBody,
	        hideModal: hideModal,
	        showModals: showModals,
	        showBodalBody: showBodalBody
	    };
	});
	*/
	// 打包形式

	module.exports = {
	    setModalBody: setModalBody,
	    hideModal: hideModal,
	    showModals: showModals,
	    showBodalBody: showBodalBody
	}

/***/ },
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ function(module, exports) {

	var getLocation,openLocation;

	// 获取config配置数据
	function getConfig(param) {
	    var locationObject;
	    $.ajax({
	        type: 'post',
	        dataType: "json",
	        url: LFQ_PLACE_URL,
	        data: param,
	        cache: false,
	        async: false,
	        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
	        success: function(msg) {
	            console.dir(msg);
	            locationObject = msg;
	            setConfig(msg);
	        },
	        error: function(msg) {
	            var response = JSON.parse(msg.response);
	            console.dir(response);
	            setConfig(response);

	        }
	    });

	    return locationObject;
	}


	function setConfig(msg) {
	    wx.config({
	        debug: false,
	        appId: msg.appid, //'wxf8b4f85f3a794e77',
	        timestamp: msg.timestamp,
	        nonceStr: msg.nonceStr,
	        signature: msg.signature,
	        jsApiList: [
	            'openLocation',
	            'getLocation'
	        ]
	    });

	}

	// 打包形式

	module.exports = {
	    getConfig: getConfig,
	    getLocation: getLocation,
	    openLocation: openLocation
	}

/***/ },
/* 7 */
/***/ function(module, exports) {

	(function init() {
	    $("input").on("keyup", function() {
	        if ($(event.target).val() != "") {
	            $(event.target).removeClass("light");
	        } else {
	            $(event.target).addClass("light");
	        }
	    })
	})();

	function getAjax(url, param, callBack) {
	    $.ajax({
	        type: 'post',
	        dataType: "json",
	        url: url,
	        data: param,
	        cache: false,
	        async: false,
	        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
	        success: function(msg) {
	            callBack(msg);
	        },
	        error: function(msg) {
	            callBack(msg);
	        }
	    });
	}

	function getUrlAjax(url, param, callBack) {
	    $.ajax({
	        type: 'get',
	        dataType: "json",
	        url: url,
	        data: param,
	        cache: false,
	        async: false,
	        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
	        success: function(msg) {
	            callBack(msg);
	        },
	        error: function(msg) {
	            callBack(msg);
	        }
	    });
	}

	// 获取url参数
	window.QueryString = {
	    data: {},
	    Initial: function() {
	        var aPairs, aTmp;
	        var queryString = new String(window.location.search);
	        queryString = queryString.substr(1, queryString.length);
	        aPairs = queryString.split("&");
	        for (var i = 0; i < aPairs.length; i++) {
	            aTmp = aPairs[i].split("=");
	            this.data[aTmp[0]] = aTmp[1];
	        }
	    },
	    GetValue: function(key) {
	        return this.data[key];
	    }
	}

	//移动端检查
	function checkBrowser() {
	    var u = navigator.userAgent.toLowerCase();
	    if (u.indexOf('mobile') == -1 && u.indexOf('iphone') == -1) {
	        window.location.href = "../error_browser.html";
	    }
	}

	// 注册真实点击
	function registerReallyClick($selector) {
	    var falg = false;
	    $selector.on('touchstart', function() {
	        falg = false;
	    });
	    $selector.on('touchmove', function() {
	        falg = true;
	    });
	    $selector.on('touchend', function() {
	        if (!falg) {
	            $selector.trigger("reallyClick", [$(event.target)]);
	        }
	    });
	}

	/*
	// 不打包形式
	require.register("./zeptoCommon.js", function(module, exports, require) {
	    module.exports = {
	        getAjax: getAjax,
	        getUrlAjax: getUrlAjax,
	        checkBrowser: checkBrowser,
	        registerReallyClick: registerReallyClick
	    }
	});
	*/

	// 打包形式
	module.exports = {
	    getAjax: getAjax,
	    getUrlAjax: getUrlAjax,
	    checkBrowser: checkBrowser,
	    registerReallyClick: registerReallyClick
	}


/***/ },
/* 8 */
/***/ function(module, exports) {

	/*
	 * 智能机浏览器版本信息:
	 *
	 */
	$("#clo_btn").click(function(e) {
		$("#pay_Box").hide();
	//	indexPwd = 0;
		restPwd();
	});
	$("#payBoxSure").on("touchend", function() {
		if ($("#payBoxSure").hasClass("btn_disabled")) {
			return;
		}
		pwdVarify();
	});
	var password;
	//var indexPwd = 0;
	var browser = {
		versions: function() {
			var u = navigator.userAgent,
				app = navigator.appVersion;
			return { // 移动终端浏览器版本信息
				trident: u.indexOf('Trident') > -1, // IE内核
				presto: u.indexOf('Presto') > -1, // opera内核
				webKit: u.indexOf('AppleWebKit') > -1, // 苹果、谷歌内核
				gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, // 火狐内核
				mobile: !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/), // 是否为移动终端
				ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/), // ios终端
				android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, // android终端或者uc浏览器
				iPhone: u.indexOf('iPhone') > -1 || u.indexOf('Mac') > -1, // 是否为iPhone或者QQHD浏览器
				iPad: u.indexOf('iPad') > -1, // 是否iPad
				webApp: u.indexOf('Safari') == -1
					// 是否web应该程序，没有头部与底部
			};
		}(),
		language: (navigator.browserLanguage || navigator.language).toLowerCase()
	};
	var touchEvents = {
		touchstart: "touchstart",
		touchmove: "touchmove",
		touchend: "touchend",

		/**
		 * @desc:判断是否pc设备，若是pc，需要更改touch事件为鼠标事件，否则默认触摸事件
		 */
		initTouchEvents: function() {
			if (browser.versions.mobile == false) {
				this.touchstart = "mousedown";
				this.touchmove = "mousemove";
				this.touchend = "mouseup";
			}
		}
	};
	touchEvents.initTouchEvents();
	$(function() {
		$(".key").bind(touchEvents.touchstart, function(event) {
			//		event.preventDefault();// 阻止浏览器默认事件，重要 
			if (password.length >= 6) {
				return;
			} else {
				password += "" + $(this).html();
			}
			if (password.length == 1) {
				$("#pwdOne").html("●");
			}
			if (password.length == 2) {
				$("#pwdTwo").html("●");
			}
			if (password.length == 3) {
				$("#pwdThree").html("●");
			}
			if (password.length == 4) {
				$("#pwdFour").html("●");
			}
			if (password.length == 5) {
				$("#pwdFive").html("●");
			}
			if (password.length == 6) {
				$("#pwdSix").html("●");
				shwoPayBoxSure();
				winHide();
				//			indexPwd = 0;
			} else {
				hidePayBoxSure();
			}
		});
	});

	// 禁用确定按钮
	function hidePayBoxSure() {
		$("#payBoxSure").removeClass("btn_primary");
		$("#payBoxSure").addClass("btn_disabled")
	}

	// 启用确定按钮
	function shwoPayBoxSure() {
		$("#payBoxSure").removeClass("btn_disabled");
		$("#payBoxSure").addClass("btn_primary")
	}

	function pwdVarify(param, callbackFunc) {

		/*		getAjax(url, param, function(msg) {
					callbackFunc(msg);
				})*/
		PayBox.callbackFunc(password);
		if (true) {
			$("#pay_Box").hide();
		}
	}


	function winShow() {
		var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
		$(".key").each(function(i) {
			var index = parseInt(Math.random() * arr.length);
			$(this).html(arr[index]);
			arr.splice(index, 1);
		});
		$("#popDiv").show();
	}

	//清空密码框
	function restPwd() {
		$("#pwdOne").html("&nbsp;");
		$("#pwdTwo").html("&nbsp;");
		$("#pwdThree").html("&nbsp;");
		$("#pwdFour").html("&nbsp;");
		$("#pwdFive").html("&nbsp;");
		$("#pwdSix").html("&nbsp;");
		password = "";
		hidePayBoxSure();
	}

	function winHide() {
		$("#popDiv").hide();
	}

	function show(argument) {
		/*	getAjax(url, param, function(msg) {
				if (msg.varifyerror_response != undefined) {
					$("#error_Box").fadeIn();
					return;
				}
				if (msg.lock_response != undefined) {
					var times = msg.lock_response.sub_msg;
					$("#wrongNum2").html(times);
					$("#tip_Box").fadeIn();
					return;
				}
				indexPwd = 0;
				restPwd();
				$("#pay_Box").fadeIn(); //显示密码框
				winShow(); //弹出键盘
			});*/

		$("#pay_Box").show();
		winShow();
	}

	function delKey() {
		if (password.length == 1) {
			$("#pwdOne").html("&nbsp;");
		}
		if (password.length == 2) {
			$("#pwdTwo").html("&nbsp;");
		}
		if (password.length == 3) {
			$("#pwdThree").html("&nbsp;");
		}
		if (password.length == 4) {
			$("#pwdFour").html("&nbsp;");
		}
		if (password.length == 5) {
			$("#pwdFive").html("&nbsp;");
		}
		if (password.length == 6) {
			$("#pwdSix").html("&nbsp;");
		}
	/*	if (indexPwd > 0) {
			indexPwd = indexPwd - 1;
		} else {
			return;
		}*/
		if (password != "") {
			password = password.substring(0, password.length - 1);
		}
	}

	function init(url, PayBoxCallbackFunc) {
		PayBox.callbackFunc = PayBoxCallbackFunc;
	}
	/*
	// 不打包形式
	window.PayBox = {
			init: init,
			restPwd: restPwd,
			winShow: winShow,
			winHide: winHide,
			show: show,
			delKey: delKey
		}
	*/
		// 打包形式
		module.exports = PayBox = {
			init: init,
			restPwd: restPwd,
			winShow: winShow,
			winHide: winHide,
			show: show,
			delKey: delKey
		}


/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * 滚动辅助模块
	 * 将来用requiry模块加载器 或ES6 做成一个独立模块
	 * @since 2016-04-07
	 */
	var jQueryZepto;
	if (typeof jQuery == 'undefined') {
	    jQueryZepto = Zepto;
	} else {
	    jQueryZepto = jQuery;
	}
	(function($, window) {

	    //模块对外提供的公共方法
	    var exportsMethods = {

	        /**
	         * 新建一个竖直滚动实例,并做一些处理,整合上拉下拉的功能
	         * wrapper        要渲染滚动实例的位置
	         * pulldownAction 下拉执行的逻辑
	         * pullupAction   上拉执行的逻辑
	         * opts           滚动个性化参数 
	         * pullText       拉动时不同状态要显示的文字
	         */
	        newVerScrollForPull: function(wrapper, pulldownAction, pullupAction, opts, pullText) {

	            var $wrapper;
	            if (typeof wrapper === 'string') {
	                $wrapper = $(wrapper);
	            } else if (typeof wrapper === 'object') {
	                $wrapper = wrapper;
	            }

	            var pulldownRefresh = pullText && pullText['pulldownRefresh'] ? pullText['pulldownRefresh'] : '下拉刷新...',
	                pullupLoadingMore = pullText && pullText['pullupLoadingMore'] ? pullText['pullupLoadingMore'] : '上拉加载更多...',
	                releaseToRefresh = pullText && pullText['releaseToRefresh'] ? pullText['releaseToRefresh'] : '松手开始刷新...',
	                releaseToLoading = pullText && pullText['releaseToLoading'] ? pullText['releaseToLoading'] : '松手开始加载...',
	                loading = pullText && pullText['loading'] ? pullText['loading'] : '加载中...';

	            var $pulldown = $wrapper.find('#pulldown'),
	                $pullup = $wrapper.find('#pullup'),
	                pullupOffset = 0,
	                pulldownOffset = 0;

	            if ($pulldown.length > 0) {
	                pulldownOffset = $pulldown.outerHeight ? $pulldown.outerHeight() : $pulldown.height();
	                $pulldown.find('#pulldown-label').html(pulldownRefresh);
	            }

	            if ($pullup.length > 0) {
	                pullupOffset = $pullup.outerHeight ? $pullup.outerHeight() : $pullup.height();;
	                $pullup.find('#pullup-label').html(pullupLoadingMore);
	            }

	            //这个属性很重要,目前V5版本不支持,需修改源码
	            var options = {
	                topOffset: pulldownOffset
	            };

	            $.extend(true, options, opts);

	            var scrollObj = this.newVerScroll($wrapper[0], options);

	            //滚动刷新触发的事件
	            scrollObj.on('refresh', function() {

	                var $pulldown = $wrapper.find('#pulldown'),
	                    $pullup = $wrapper.find('#pullup');

	                if ($pulldown.length > 0 && $pulldown.hasClass('loading')) {
	                    $pulldown.removeClass();
	                    $pulldown.find('#pulldown-label').html(pulldownRefresh);
	                } else if ($pullup.length > 0) {
	                    $pullup.find('#pullup-icon').show();
	                    if ($pullup.hasClass('loading')) {
	                        $pullup.find('#pullup-icon').show();
	                        $pullup.removeClass();
	                        $pullup.find('#pullup-label').html(pullupLoadingMore);
	                    }
	                }
	            });

	            //滚动的时候触发的事件
	            scrollObj.on('scrollMove', function() {

	                var $pulldown = $wrapper.find('#pulldown'),
	                    $pullup = $wrapper.find('#pullup');

	                if ($pulldown.length > 0 && this.y > 5 && !$pulldown.hasClass('flip')) {
	                    $pulldown.removeClass().addClass('flip');
	                    $pulldown.find('#pulldown-label').html(releaseToRefresh);
	                    this.minScrollY = 0;

	                } else if ($pulldown.length > 0 && this.y < 5 && $pulldown.hasClass('flip')) {
	                    $pulldown.removeClass();
	                    $pulldown.find('#pulldown-label').html(pulldownRefresh);
	                    this.minScrollY = -pulldownOffset;
	                    //this.y < this.minScrollY代表是上拉,以防下拉的时候未拉到尽头时进入上拉的逻辑中
	                } else if ($pullup.length > 0 && this.y < this.minScrollY && this.y < (this.maxScrollY - 5) && !$pullup.hasClass('flip')) {
	                    $pullup.removeClass().addClass('flip');
	                    $pullup.find('#pullup-label').html(releaseToLoading);
	                    this.maxScrollY = this.maxScrollY;

	                } else if ($pullup.length > 0 && (this.y > (this.maxScrollY + 5)) && $pullup.hasClass('flip')) {
	                    $pullup.removeClass();
	                    $pullup.find('#pullup-label').html(pullupLoadingMore);
	                    this.maxScrollY = pullupOffset;
	                }
	            });

	            //滚动结束之后触发的事件
	            scrollObj.on('scrollEnd', function() {

	                var $pulldown = $wrapper.find('#pulldown'),
	                    $pullup = $wrapper.find('#pullup');

	                if ($pulldown.length > 0 && $pulldown.hasClass('flip')) {
	                    $pulldown.removeClass().addClass('loading');
	                    $pulldown.find('#pulldown-label').html(loading);
	                    if (typeof pulldownAction === 'function') {
	                        pulldownAction.call(scrollObj);
	                    }
	                } else if ($pullup.length > 0 && $pullup.hasClass('flip')) {
	                    $pullup.removeClass().addClass('loading');
	                    $pullup.find('#pullup-label').html(loading);
	                    if (typeof pullupAction === 'function' && $pullup.parent().length > 0) {
	                        pullupAction.call(scrollObj);
	                    }
	                }
	            });

	            return scrollObj;
	        },
	        /**
	         * 创建一个竖直方向的滚动实例
	         * @param obj    dom对象或者选择字符串
	         * @param option 滚动其他属性
	         * @return IScroll实例对象
	         */
	        newVerScroll: function(dom, option) {
	            var opt = {
	                scrollbars: true, //是否有滚动条
	                useTransition: false
	            };
	            if (option) {
	                $.extend(opt, option);
	            }
	            var iSObj = new IScroll(dom, opt);

	            //滚动条在滚动时显示出来,滚动结束隐藏
	            //V5以前版本有个参数可以设置,V5之后目前只能手动处理滚动条的显示隐藏或者可从外部传个参数进来判断
	            iSObj.on("scrollEnd", function() {
	                if (this.indicator1) {
	                    this.indicator1.indicatorStyle['transition-duration'] = '350ms';
	                    this.indicator1.indicatorStyle['opacity'] = '0';
	                }
	            });
	            iSObj.on("scrollMove", function() {
	                if (this.indicator1) {
	                    this.indicator1.indicatorStyle['transition-duration'] = '0ms';
	                    this.indicator1.indicatorStyle['opacity'] = '0.8';
	                }
	            });
	            return iSObj;
	        }
	    };

	    window.iscrollAssist = exportsMethods;

	})(jQueryZepto, window);

/***/ }
]);